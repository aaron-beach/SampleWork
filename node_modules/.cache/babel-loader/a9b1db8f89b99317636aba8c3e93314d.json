{"ast":null,"code":"import _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/WalletID.jsx\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\nimport React, { useRef, useState } from \"react\";\nimport { BREAK_POINT_MEDIUM_SCREEN } from \"./constants.js\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  align-self: end;\n  color: #757575;\n  cursor: pointer;\n  font-size: 0.8rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding-left: 1rem;\n  transform: translateY(1px);\n\n  @media (max-width: ${BREAK_POINT_MEDIUM_SCREEN}) {\n    order: 3;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    padding-left: 0;\n  }\n\n  &:hover {\n    color: #333;\n  }\n`;\nconst ID = styled.span`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 4px;\n  position: relative;\n  text-align: left;\n\n  & > span {\n    width: 100%;\n    display: block;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & > i {\n    display: block;\n    transform: translateY(5px);\n  }\n`;\nconst HiddenInput = styled.input`\n  left: -100px;\n  opacity: 0;\n  position: fixed;\n  top: -100px;\n`;\nlet timeoutId;\n\nfunction WalletID({\n  walletID\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showCopiedTooltip = _useState2[0],\n        setShowCopiedTooltip = _useState2[1];\n\n  const inputRef = useRef(null);\n  const tooltipTargetRef = useRef(null);\n\n  const handleClick = () => {\n    window.clearTimeout(timeoutId);\n    const input = inputRef.current;\n    input.select();\n    document.execCommand(\"copy\");\n    setShowCopiedTooltip(true);\n    timeoutId = window.setTimeout(() => {\n      setShowCopiedTooltip(false);\n    }, 1000);\n  };\n\n  return React.createElement(Wrapper, {\n    className: \"transition-all\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ID, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: handleClick,\n    ref: tooltipTargetRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, walletID), React.createElement(\"i\", {\n    onClick: handleClick,\n    className: \"fas fa-copy\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(Overlay, {\n    target: tooltipTargetRef.current,\n    show: showCopiedTooltip,\n    placement: \"top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, props => React.createElement(Tooltip, Object.assign({\n    id: \"overlay-example\"\n  }, props, {\n    show: null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \"Walled ID Copied\")), React.createElement(HiddenInput, {\n    tabIndex: 0,\n    ref: inputRef,\n    defaultValue: walletID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }));\n}\n\nexport default WalletID;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/WalletID.jsx"],"names":["Overlay","Tooltip","React","useRef","useState","BREAK_POINT_MEDIUM_SCREEN","styled","Wrapper","div","ID","span","HiddenInput","input","timeoutId","WalletID","walletID","showCopiedTooltip","setShowCopiedTooltip","inputRef","tooltipTargetRef","handleClick","window","clearTimeout","current","select","document","execCommand","setTimeout","props"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,OAAlB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAEA,SAASC,yBAAT,QAA0C,gBAA1C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;;uBAUJH,yBAA0B;;;;;;;;;;CAVjD;AAsBA,MAAMI,EAAE,GAAGH,MAAM,CAACI,IAAK;;;;;;;;;;;;;;;;;;;CAAvB;AAqBA,MAAMC,WAAW,GAAGL,MAAM,CAACM,KAAM;;;;;CAAjC;AAOA,IAAIC,SAAJ;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAAA,oBACoBX,QAAQ,CAAC,KAAD,CAD5B;AAAA;AAAA,QACvBY,iBADuB;AAAA,QACJC,oBADI;;AAE9B,QAAMC,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,QAAMgB,gBAAgB,GAAGhB,MAAM,CAAC,IAAD,CAA/B;;AAEA,QAAMiB,WAAW,GAAG,MAAM;AACxBC,IAAAA,MAAM,CAACC,YAAP,CAAoBT,SAApB;AACA,UAAMD,KAAK,GAAGM,QAAQ,CAACK,OAAvB;AACAX,IAAAA,KAAK,CAACY,MAAN;AACAC,IAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACAT,IAAAA,oBAAoB,CAAC,IAAD,CAApB;AACAJ,IAAAA,SAAS,GAAGQ,MAAM,CAACM,UAAP,CAAkB,MAAM;AAClCV,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,KAFW,EAET,IAFS,CAAZ;AAGD,GATD;;AAWA,SACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAEG,WAAf;AAA4B,IAAA,GAAG,EAAED,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF,EAIE;AAAG,IAAA,OAAO,EAAEK,WAAZ;AAAyB,IAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAOE,oBAAC,OAAD;AACE,IAAA,MAAM,EAAED,gBAAgB,CAACI,OAD3B;AAEE,IAAA,IAAI,EAAEP,iBAFR;AAGE,IAAA,SAAS,EAAC,KAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGY,KAAK,IACJ,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC;AAAZ,KAAkCA,KAAlC;AAAyC,IAAA,IAAI,EAAE,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,CAPF,EAkBE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAE,CAAvB;AAA0B,IAAA,GAAG,EAAEV,QAA/B;AAAyC,IAAA,YAAY,EAAEH,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF;AAsBD;;AAED,eAAeD,QAAf","sourcesContent":["import { Overlay, Tooltip } from \"react-bootstrap\";\nimport React, { useRef, useState } from \"react\";\n\nimport { BREAK_POINT_MEDIUM_SCREEN } from \"./constants.js\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  align-self: end;\n  color: #757575;\n  cursor: pointer;\n  font-size: 0.8rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n  padding-left: 1rem;\n  transform: translateY(1px);\n\n  @media (max-width: ${BREAK_POINT_MEDIUM_SCREEN}) {\n    order: 3;\n    grid-column-start: 1;\n    grid-column-end: 3;\n    padding-left: 0;\n  }\n\n  &:hover {\n    color: #333;\n  }\n`;\n\nconst ID = styled.span`\n  display: grid;\n  grid-template-columns: auto 1fr;\n  grid-column-gap: 4px;\n  position: relative;\n  text-align: left;\n\n  & > span {\n    width: 100%;\n    display: block;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & > i {\n    display: block;\n    transform: translateY(5px);\n  }\n`;\n\nconst HiddenInput = styled.input`\n  left: -100px;\n  opacity: 0;\n  position: fixed;\n  top: -100px;\n`;\n\nlet timeoutId;\n\nfunction WalletID({ walletID }) {\n  const [showCopiedTooltip, setShowCopiedTooltip] = useState(false);\n  const inputRef = useRef(null);\n  const tooltipTargetRef = useRef(null);\n\n  const handleClick = () => {\n    window.clearTimeout(timeoutId);\n    const input = inputRef.current;\n    input.select();\n    document.execCommand(\"copy\");\n    setShowCopiedTooltip(true);\n    timeoutId = window.setTimeout(() => {\n      setShowCopiedTooltip(false);\n    }, 1000);\n  };\n\n  return (\n    <Wrapper className=\"transition-all\">\n      <ID>\n        <span onClick={handleClick} ref={tooltipTargetRef}>\n          {walletID}\n        </span>\n        <i onClick={handleClick} className=\"fas fa-copy\"></i>\n      </ID>\n      <Overlay\n        target={tooltipTargetRef.current}\n        show={showCopiedTooltip}\n        placement=\"top\"\n      >\n        {props => (\n          <Tooltip id=\"overlay-example\" {...props} show={null}>\n            Walled ID Copied\n          </Tooltip>\n        )}\n      </Overlay>\n      <HiddenInput tabIndex={0} ref={inputRef} defaultValue={walletID} />\n    </Wrapper>\n  );\n}\n\nexport default WalletID;\n"]},"metadata":{},"sourceType":"module"}