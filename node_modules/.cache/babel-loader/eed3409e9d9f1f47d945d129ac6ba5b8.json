{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Profile/EditProfile/ProfileDetails.jsx\";\nimport { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ProfileDetails() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n\n  const invalidMsg = React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"This field is required\");\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"User Details\"), React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"userName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"firstName\",\n    placeholder: \"First Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.firstName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), errors.firstName && invalidMsg), React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"lastName\",\n    placeholder: \"Last Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.lastName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), errors.lastName && invalidMsg)), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"organization\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"title\",\n    placeholder: \"Title\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), errors.title && invalidMsg), React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Company\"), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"company\",\n    placeholder: \"Company\",\n    ref: register,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    name: \"city\",\n    placeholder: \"City\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.city),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), errors.city && invalidMsg), React.createElement(Col, {\n    xs: \"12\",\n    sm: \"6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Form.Control, {\n    name: \"country\",\n    placeholder: \"Country\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.country),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), errors.country && invalidMsg)), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default ProfileDetails;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Profile/EditProfile/ProfileDetails.jsx"],"names":["Button","Col","Card","Form","Row","React","useForm","ProfileDetails","register","handleSubmit","errors","onSubmit","data","console","log","invalidMsg","required","Boolean","firstName","lastName","title","city","country"],"mappings":"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","sourcesContent":["import { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ProfileDetails() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n  const invalidMsg = (\n    <Form.Control.Feedback type=\"invalid\">\n      This field is required\n    </Form.Control.Feedback>\n  );\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>User Details</Card.Title>\n        <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group as={Row} controlId=\"userName\">\n            <Form.Label className=\"sr-only\">First Name</Form.Label>\n            <Col xs=\"12\" sm=\"6\">\n              <Form.Control\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.firstName)}\n              />\n              {errors.firstName && invalidMsg}\n            </Col>\n            <Form.Label className=\"sr-only\">Last Name</Form.Label>\n            <Col xs=\"12\" sm=\"6\" >\n              <Form.Control\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.lastName)}\n              />\n              {errors.lastName && invalidMsg}\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"organization\">\n            <Form.Label className=\"sr-only\">Title</Form.Label>\n            <Col xs=\"12\" sm=\"6\">\n              <Form.Control\n                name=\"title\"\n                placeholder=\"Title\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.title)}\n              />\n              {errors.title && invalidMsg}\n            </Col>\n            <Form.Label className=\"sr-only\">Company</Form.Label>\n            <Col xs=\"12\" sm=\"6\">\n              <Form.Control\n                name=\"company\"\n                placeholder=\"Company\"\n                ref={register}\n                type=\"text\"\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"location\">\n            <Col xs=\"12\" sm=\"6\">\n              <Form.Label className=\"sr-only\">City</Form.Label>\n              <Form.Control\n                name=\"city\"\n                placeholder=\"City\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.city)}\n              />\n              {errors.city && invalidMsg}\n            </Col>\n            <Col xs=\"12\" sm=\"6\">\n              <Form.Label className=\"sr-only\">Country</Form.Label>\n              <Form.Control\n                name=\"country\"\n                placeholder=\"Country\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.country)}\n              />\n              {errors.country && invalidMsg}\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}