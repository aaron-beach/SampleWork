{"ast":null,"code":"import _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/CreateWallet/StepWalletPassword.jsx\";\nimport { Button, Card, Col, Container, Form, OverlayTrigger, Row, Tooltip } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport PasswordStrengthIndicator from \"./PasswordStrengthIndicator\";\nimport zxcvbn from \"zxcvbn\";\n\nfunction StepWalletPassword({\n  onSubmit\n}) {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        password = _useState2[0],\n        setPassword = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        passwordConfirmation = _useState4[0],\n        setPasswordConfirmation = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        passwordStrength = _useState6[0],\n        setPasswordStrength = _useState6[1];\n\n  const isPasswordValid = () => {\n    if (password !== passwordConfirmation) return false;\n    if (passwordStrength < 1) return false;\n    return true;\n  };\n\n  const onPasswordChange = e => {\n    const value = e.target.value || \"\";\n    setPassword(value);\n    setPasswordStrength(zxcvbn(value).score);\n  };\n\n  const onPasswordConfirmationChange = e => {\n    const value = e.target.value || \"\";\n    setPasswordConfirmation(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({\n      password\n    });\n  };\n\n  const renderPasswordTooltip = props => {\n    let title = \"\";\n\n    switch (passwordStrength) {\n      case 0:\n      case 1:\n        title = \"Low security\";\n        break;\n\n      case 2:\n        title = \"Medium security\";\n        break;\n\n      case 3:\n        title = \"High security\";\n        break;\n\n      case 4:\n      default:\n        title = \"Highest security\";\n        break;\n    }\n\n    return React.createElement(Tooltip, Object.assign({}, props, {\n      show: null,\n      id: \"password-tooltip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"mb-1 d-block text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, title)), React.createElement(\"span\", {\n      className: \"d-block text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"A good password is a mix with letters and numbers.\"));\n  };\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Generate New Wallet\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"div\", {\n    className: \"position-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(OverlayTrigger, {\n    placement: \"right\",\n    overlay: renderPasswordTooltip,\n    trigger: \"focus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: onPasswordChange,\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  })), React.createElement(PasswordStrengthIndicator, {\n    strength: passwordStrength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"confirmPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    onChange: onPasswordConfirmationChange,\n    value: passwordConfirmation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })))), React.createElement(Button, {\n    type: \"submit\",\n    disabled: !isPasswordValid(),\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Submit\")))));\n}\n\nexport default StepWalletPassword;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/CreateWallet/StepWalletPassword.jsx"],"names":["Button","Card","Col","Container","Form","OverlayTrigger","Row","Tooltip","React","useState","PasswordStrengthIndicator","zxcvbn","StepWalletPassword","onSubmit","password","setPassword","passwordConfirmation","setPasswordConfirmation","passwordStrength","setPasswordStrength","isPasswordValid","onPasswordChange","e","value","target","score","onPasswordConfirmationChange","handleSubmit","preventDefault","renderPasswordTooltip","props","title"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Card,\n  Col,\n  Container,\n  Form,\n  OverlayTrigger,\n  Row,\n  Tooltip\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport PasswordStrengthIndicator from \"./PasswordStrengthIndicator\";\nimport zxcvbn from \"zxcvbn\";\n\nfunction StepWalletPassword({ onSubmit }) {\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [passwordStrength, setPasswordStrength] = useState(0);\n\n  const isPasswordValid = () => {\n    if (password !== passwordConfirmation) return false;\n    if (passwordStrength < 1) return false;\n    return true;\n  };\n\n  const onPasswordChange = e => {\n    const value = e.target.value || \"\";\n    setPassword(value);\n    setPasswordStrength(zxcvbn(value).score);\n  };\n\n  const onPasswordConfirmationChange = e => {\n    const value = e.target.value || \"\";\n    setPasswordConfirmation(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({\n      password\n    });\n  };\n\n  const renderPasswordTooltip = props => {\n    let title = \"\";\n    switch (passwordStrength) {\n      case 0:\n      case 1:\n        title = \"Low security\";\n        break;\n      case 2:\n        title = \"Medium security\";\n        break;\n      case 3:\n        title = \"High security\";\n        break;\n      case 4:\n      default:\n        title = \"Highest security\";\n        break;\n    }\n\n    return (\n      <Tooltip {...props} show={null} id=\"password-tooltip\">\n        <span className=\"mb-1 d-block text-left\">\n          <strong>{title}</strong>\n        </span>\n        <span className=\"d-block text-left\">\n          A good password is a mix with letters and numbers.\n        </span>\n      </Tooltip>\n    );\n  };\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title>Generate New Wallet</Card.Title>\n        <form onSubmit={handleSubmit}>\n          <Container className=\"mt-5\">\n            <Row>\n              <Col md={6}>\n                <Form.Group controlId=\"password\">\n                  <Form.Label className=\"sr-only\">Password</Form.Label>\n                  <div className=\"position-relative\">\n                    <OverlayTrigger\n                      placement=\"right\"\n                      overlay={renderPasswordTooltip}\n                      trigger=\"focus\"\n                    >\n                      <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        onChange={onPasswordChange}\n                        value={password}\n                      />\n                    </OverlayTrigger>\n                    <PasswordStrengthIndicator strength={passwordStrength} />\n                  </div>\n                </Form.Group>\n              </Col>\n            </Row>\n            <Row>\n              <Col md={6}>\n                <Form.Group controlId=\"confirmPassword\">\n                  <Form.Label className=\"sr-only\">Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    onChange={onPasswordConfirmationChange}\n                    value={passwordConfirmation}\n                  />\n                </Form.Group>\n              </Col>\n            </Row>\n            <Button\n              type=\"submit\"\n              disabled={!isPasswordValid()}\n              className=\"mt-3\"\n            >\n              Submit\n            </Button>\n          </Container>\n        </form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default StepWalletPassword;\n"]},"metadata":{},"sourceType":"module"}