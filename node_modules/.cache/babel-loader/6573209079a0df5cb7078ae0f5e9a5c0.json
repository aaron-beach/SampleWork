{"ast":null,"code":"import _objectSpread from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/SendForm.jsx\";\nimport { ButtonGroup as BootstrapButtonGroup, Button, Card, Col, Form, Modal } from \"react-bootstrap\";\nimport { CURRENCY_DAI, CURRENCY_ETH } from \"./constants.js\";\nimport React, { useState } from \"react\";\nimport convertIcon from \"images/currencyConvert.svg\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: 400px) {\n    flex-direction: column;\n  }\n`;\nconst ButtonGroup = styled(BootstrapButtonGroup)`\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  margin-right: 1rem;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n`;\nconst Icon = styled.img`\n  width: 37px;\n`;\nconst SendAmountFormRow = styled(Form.Row)`\n  & .form-group {\n    padding-right: 0;\n  }\n\n  & .form-group + .form-group {\n    padding-left: 0;\n  }\n\n  & .btn-group {\n    height: calc(100% - 2px);\n    transform: translateY(1px);\n    padding-left: 0;\n\n    & .btn:first-child {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  & .form-control {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n`;\nconst DEFAULT_SEND_FORM = {\n  walletID: \"\",\n  amount: \"\",\n  currency: CURRENCY_DAI\n};\n\nfunction SendForm({\n  currency\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showConvertModal = _useState2[0],\n        setShowConvertModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showSendModal = _useState4[0],\n        setSendConvertModal = _useState4[1];\n\n  const _useState5 = useState(DEFAULT_SEND_FORM),\n        _useState6 = _slicedToArray(_useState5, 2),\n        sendForm = _useState6[0],\n        setSendForm = _useState6[1];\n\n  const handleConvertClick = () => {\n    setShowConvertModal(true);\n  };\n\n  const handleCloseConvertModal = () => {\n    setShowConvertModal(false);\n  };\n\n  const handleSendClick = () => {\n    setSendConvertModal(true);\n  };\n\n  const handleCloseSendModal = () => {\n    setSendForm(DEFAULT_SEND_FORM);\n    setSendConvertModal(false);\n  };\n\n  const handleSendFormChange = e => {\n    setSendForm(_objectSpread({}, sendForm, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    className: \"mt-5 pl-3 pr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    src: convertIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(ButtonGroup, {\n    \"aria-label\": \"Send options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: currency === CURRENCY_DAI,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_DAI ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"DAI\"), React.createElement(Button, {\n    disabled: currency === CURRENCY_ETH,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_ETH ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"ETH\")), React.createElement(Button, {\n    block: true,\n    onClick: handleSendClick,\n    variant: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Send \", React.createElement(\"i\", {\n    className: \"fas fa-arrow-circle-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))), React.createElement(Modal, {\n    show: showConvertModal,\n    onHide: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Convert Wallet\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Are you sure you want to convert your wallet to\", \" \", currency === CURRENCY_ETH ? CURRENCY_DAI : CURRENCY_ETH), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"link\",\n    onClick: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Convert\"))), React.createElement(Modal, {\n    show: showSendModal,\n    onHide: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, \"Send Money\")), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Send money to another Rise user.\"), React.createElement(Form.Group, {\n    controlId: \"walletID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"Wallet ID\"), React.createElement(Form.Control, {\n    name: \"walletID\",\n    type: \"text\",\n    placeholder: \"Wallet ID\",\n    value: sendForm.walletID,\n    onChange: handleSendFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  })), React.createElement(SendAmountFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Amount\"), React.createElement(Form.Control, {\n    placeholder: \"Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(BootstrapButtonGroup, {\n    as: Col,\n    \"aria-label\": \"Send options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: currency === CURRENCY_DAI,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_DAI ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"DAI\"), React.createElement(Button, {\n    disabled: currency === CURRENCY_ETH,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_ETH ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, \"ETH\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"link\",\n    onClick: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Send\"))));\n}\n\nexport default SendForm;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/SendForm.jsx"],"names":["ButtonGroup","BootstrapButtonGroup","Button","Card","Col","Form","Modal","CURRENCY_DAI","CURRENCY_ETH","React","useState","styled","Wrapper","div","Icon","img","SendAmountFormRow","Row","DEFAULT_SEND_FORM","walletID","amount","currency","SendForm","showConvertModal","setShowConvertModal","showSendModal","setSendConvertModal","sendForm","setSendForm","handleConvertClick","handleCloseConvertModal","handleSendClick","handleCloseSendModal","handleSendFormChange","e","target","name","value","convertIcon"],"mappings":"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","sourcesContent":["import {\n  ButtonGroup as BootstrapButtonGroup,\n  Button,\n  Card,\n  Col,\n  Form,\n  Modal\n} from \"react-bootstrap\";\nimport { CURRENCY_DAI, CURRENCY_ETH } from \"./constants.js\";\nimport React, { useState } from \"react\";\n\nimport convertIcon from \"images/currencyConvert.svg\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: 400px) {\n    flex-direction: column;\n  }\n`;\n\nconst ButtonGroup = styled(BootstrapButtonGroup)`\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  margin-right: 1rem;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst Icon = styled.img`\n  width: 37px;\n`;\n\nconst SendAmountFormRow = styled(Form.Row)`\n  & .form-group {\n    padding-right: 0;\n  }\n\n  & .form-group + .form-group {\n    padding-left: 0;\n  }\n\n  & .btn-group {\n    height: calc(100% - 2px);\n    transform: translateY(1px);\n    padding-left: 0;\n\n    & .btn:first-child {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  & .form-control {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n`;\n\nconst DEFAULT_SEND_FORM = {\n  walletID: \"\",\n  amount: \"\",\n  currency: CURRENCY_DAI\n};\n\nfunction SendForm({ currency }) {\n  const [showConvertModal, setShowConvertModal] = useState(false);\n  const [showSendModal, setSendConvertModal] = useState(false);\n  const [sendForm, setSendForm] = useState(DEFAULT_SEND_FORM);\n\n  const handleConvertClick = () => {\n    setShowConvertModal(true);\n  };\n\n  const handleCloseConvertModal = () => {\n    setShowConvertModal(false);\n  };\n\n  const handleSendClick = () => {\n    setSendConvertModal(true);\n  };\n\n  const handleCloseSendModal = () => {\n    setSendForm(DEFAULT_SEND_FORM);\n    setSendConvertModal(false);\n  };\n\n  const handleSendFormChange = e => {\n    setSendForm({\n      ...sendForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <>\n      <Card className=\"mt-5 pl-3 pr-3\">\n        <Wrapper>\n          <Icon src={convertIcon} />\n          <ButtonGroup aria-label=\"Send options\">\n            <Button\n              disabled={currency === CURRENCY_DAI}\n              onClick={handleConvertClick}\n              variant={currency === CURRENCY_DAI ? \"primary\" : \"light\"}\n            >\n              DAI\n            </Button>\n            <Button\n              disabled={currency === CURRENCY_ETH}\n              onClick={handleConvertClick}\n              variant={currency === CURRENCY_ETH ? \"primary\" : \"light\"}\n            >\n              ETH\n            </Button>\n          </ButtonGroup>\n          <Button block onClick={handleSendClick} variant=\"light\">\n            Send <i className=\"fas fa-arrow-circle-right\"></i>\n          </Button>\n        </Wrapper>\n      </Card>\n\n      <Modal show={showConvertModal} onHide={handleCloseConvertModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Convert Wallet</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Are you sure you want to convert your wallet to{\" \"}\n          {currency === CURRENCY_ETH ? CURRENCY_DAI : CURRENCY_ETH}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" onClick={handleCloseConvertModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseConvertModal}>\n            Convert\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showSendModal} onHide={handleCloseSendModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Send Money</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Send money to another Rise user.</p>\n          <Form.Group controlId=\"walletID\">\n            <Form.Label className=\"sr-only\">Wallet ID</Form.Label>\n            <Form.Control\n              name=\"walletID\"\n              type=\"text\"\n              placeholder=\"Wallet ID\"\n              value={sendForm.walletID}\n              onChange={handleSendFormChange}\n            />\n          </Form.Group>\n          <SendAmountFormRow>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label className=\"sr-only\">Amount</Form.Label>\n              <Form.Control placeholder=\"Amount\" />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <BootstrapButtonGroup as={Col} aria-label=\"Send options\">\n                <Button\n                  disabled={currency === CURRENCY_DAI}\n                  onClick={handleConvertClick}\n                  variant={currency === CURRENCY_DAI ? \"primary\" : \"light\"}\n                >\n                  DAI\n                </Button>\n                <Button\n                  disabled={currency === CURRENCY_ETH}\n                  onClick={handleConvertClick}\n                  variant={currency === CURRENCY_ETH ? \"primary\" : \"light\"}\n                >\n                  ETH\n                </Button>\n              </BootstrapButtonGroup>\n            </Form.Group>\n          </SendAmountFormRow>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" onClick={handleCloseSendModal}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseSendModal}>\n            Send\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default SendForm;\n"]},"metadata":{},"sourceType":"module"}