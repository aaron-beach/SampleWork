{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/SampleWork/src/Profile/EditProfile/AboutMe.jsx\";\nimport { Form, Button, Card } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { renderInvalidMessage } from \"SharedComponents/ValidationMessage\";\n\nfunction AboutMe() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n\n  return React.createElement(Card, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"About Me\"), React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"aboutMe\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"About Me\"), React.createElement(Form.Control, {\n    name: \"headline\",\n    placeholder: \"Headline\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.headline),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), errors.headline && renderInvalidMessage()), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Form.Control, {\n    name: \"description\",\n    as: \"textarea\",\n    placeholder: \"Description\",\n    ref: register({\n      required: true\n    }),\n    rows: \"2\",\n    isInvalid: Boolean(errors.description),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), errors.description && renderInvalidMessage()), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default AboutMe;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/SampleWork/src/Profile/EditProfile/AboutMe.jsx"],"names":["Form","Button","Card","React","useForm","renderInvalidMessage","AboutMe","register","handleSubmit","errors","onSubmit","data","console","log","required","Boolean","headline","description"],"mappings":";AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,iBAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,oBAAT,QAAqC,oCAArC;;AAEA,SAASC,OAAT,GAAmB;AAAA,mBAC0BF,OAAO,EADjC;AAAA,QACTG,QADS,YACTA,QADS;AAAA,QACCC,YADD,YACCA,YADD;AAAA,QACeC,MADf,YACeA,MADf;;AAEjB,QAAMC,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD,CAFiB,CAId;;;AAEH,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEH,YAAY,CAACE,QAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAHf;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,SAAS,EAAEC,OAAO,CAACN,MAAM,CAACO,QAAR,CALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGP,MAAM,CAACO,QAAP,IAAmBX,oBAAoB,EAT1C,CADF,EAYE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,GAAG,EAAEE,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAKE,IAAA,IAAI,EAAC,GALP;AAME,IAAA,SAAS,EAAEC,OAAO,CAACN,MAAM,CAACQ,WAAR,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUGR,MAAM,CAACQ,WAAP,IAAsBZ,oBAAoB,EAV7C,CAZF,EAwBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,CAFF,CADF,CADF;AAiCD;;AAED,eAAeC,OAAf","sourcesContent":["import { Form, Button, Card } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { renderInvalidMessage } from \"SharedComponents/ValidationMessage\";\n\nfunction AboutMe() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <Card.Title>About Me</Card.Title>\n        <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group controlId=\"aboutMe\">\n            <Form.Label className=\"sr-only\">About Me</Form.Label>\n            <Form.Control\n              name=\"headline\"\n              placeholder=\"Headline\"\n              ref={register({ required: true })}\n              type=\"text\"\n              isInvalid={Boolean(errors.headline)}\n            />\n            {errors.headline && renderInvalidMessage()}\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"sr-only\">Description</Form.Label>\n            <Form.Control\n              name=\"description\"\n              as=\"textarea\"\n              placeholder=\"Description\"\n              ref={register({ required: true })}\n              rows=\"2\"\n              isInvalid={Boolean(errors.description)}\n            />\n            {errors.description && renderInvalidMessage()}\n          </Form.Group>\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default AboutMe;\n"]},"metadata":{},"sourceType":"module"}