{"ast":null,"code":"import _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/index.jsx\";\nimport { BREAK_POINT_MEDIUM_SCREEN, BREAK_POINT_SMALLEST_SCREEN, CURRENCY_DAI, CURRENCY_ETH } from \"./constants.js\";\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport SendForm from \"./SendForm\";\nimport Transaction from \"./Transaction\";\nimport WalletCurrency from \"./WalletCurrency\";\nimport WalletID from \"./WalletID\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nconst CardTitle = styled.span`\n  display: block;\n`;\nconst CardHeader = styled(Card.Title)`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  @media (max-width: ${BREAK_POINT_MEDIUM_SCREEN}) {\n    grid-template-columns: 50% 50%;\n  }\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    ${CardTitle},\n    .currency-wrapper .h5 {\n      font-size: 1rem;\n    }\n    .currency-wrapper {\n      padding-right: 0;\n    }\n  }\n`;\n\nfunction Wallet(props) {\n  const _useState = useState(props.transactions),\n        _useState2 = _slicedToArray(_useState, 1),\n        transactions = _useState2[0];\n\n  const _useState3 = useState(CURRENCY_DAI),\n        _useState4 = _slicedToArray(_useState3, 2),\n        viewCurrency = _useState4[0],\n        setViewCurrency = _useState4[1];\n\n  const _useState5 = useState(props.currency),\n        _useState6 = _slicedToArray(_useState5, 1),\n        walletCurrency = _useState6[0];\n\n  const _useState7 = useState(props.amount),\n        _useState8 = _slicedToArray(_useState7, 2),\n        amount = _useState8[0],\n        setAmount = _useState8[1];\n\n  const _useTranslation = useTranslation(),\n        t = _useTranslation.t;\n\n  const handleToggleCurrency = () => {\n    setViewCurrency(viewCurrency === CURRENCY_DAI ? CURRENCY_ETH : CURRENCY_DAI);\n    setAmount(amount + 100);\n  };\n\n  return React.createElement(Card, {\n    className: \"mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, props.title), React.createElement(WalletID, {\n    walletID: props.walletID,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(WalletCurrency, {\n    amount: amount,\n    currency: viewCurrency,\n    onToggleCurrency: handleToggleCurrency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 1,\n    lg: 2,\n    className: \"d-none d-md-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Col, {\n    md: 10,\n    lg: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(SendForm, {\n    currency: walletCurrency,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(\"hr\", {\n    className: \"mt-4 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, transactions.map(transaction => React.createElement(Transaction, {\n    key: transaction.id,\n    userAvatar: transaction.userAvatar,\n    userName: transaction.userName,\n    date: transaction.date,\n    amount: transaction.amount,\n    sent: transaction.sent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    block: true,\n    variant: \"link\",\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, t(\"wallet.moreTransactions\")))), React.createElement(Col, {\n    md: 1,\n    lg: 2,\n    className: \"d-none d-md-flex\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })))));\n}\n\nexport default Wallet;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/index.jsx"],"names":["BREAK_POINT_MEDIUM_SCREEN","BREAK_POINT_SMALLEST_SCREEN","CURRENCY_DAI","CURRENCY_ETH","Button","Card","Col","Container","Row","React","useState","SendForm","Transaction","WalletCurrency","WalletID","styled","useTranslation","CardTitle","span","CardHeader","Title","Wallet","props","transactions","viewCurrency","setViewCurrency","currency","walletCurrency","amount","setAmount","t","handleToggleCurrency","title","walletID","map","transaction","id","userAvatar","userName","date","sent"],"mappings":"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","sourcesContent":["import {\n  BREAK_POINT_MEDIUM_SCREEN,\n  BREAK_POINT_SMALLEST_SCREEN,\n  CURRENCY_DAI,\n  CURRENCY_ETH\n} from \"./constants.js\";\nimport { Button, Card, Col, Container, Row } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport SendForm from \"./SendForm\";\nimport Transaction from \"./Transaction\";\nimport WalletCurrency from \"./WalletCurrency\";\nimport WalletID from \"./WalletID\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nconst CardTitle = styled.span`\n  display: block;\n`;\n\nconst CardHeader = styled(Card.Title)`\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  @media (max-width: ${BREAK_POINT_MEDIUM_SCREEN}) {\n    grid-template-columns: 50% 50%;\n  }\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    ${CardTitle},\n    .currency-wrapper .h5 {\n      font-size: 1rem;\n    }\n    .currency-wrapper {\n      padding-right: 0;\n    }\n  }\n`;\n\nfunction Wallet(props) {\n  const [transactions] = useState(props.transactions);\n  const [viewCurrency, setViewCurrency] = useState(CURRENCY_DAI);\n  const [walletCurrency] = useState(props.currency);\n  const [amount, setAmount] = useState(props.amount);\n  const { t } = useTranslation();\n\n  const handleToggleCurrency = () => {\n    setViewCurrency(\n      viewCurrency === CURRENCY_DAI ? CURRENCY_ETH : CURRENCY_DAI\n    );\n    setAmount(amount + 100);\n  };\n\n  return (\n    <Card className=\"mb-5\">\n      <Card.Body>\n        <CardHeader>\n          <CardTitle>{props.title}</CardTitle>\n          <WalletID walletID={props.walletID} />\n          <WalletCurrency\n            amount={amount}\n            currency={viewCurrency}\n            onToggleCurrency={handleToggleCurrency}\n          />\n        </CardHeader>\n        <Container>\n          <Row>\n            <Col md={1} lg={2} className=\"d-none d-md-flex\"></Col>\n            <Col md={10} lg={8}>\n              <SendForm currency={walletCurrency} />\n              <hr className=\"mt-4 mb-4\" />\n              <div>\n                {transactions.map(transaction => (\n                  <Transaction\n                    key={transaction.id}\n                    userAvatar={transaction.userAvatar}\n                    userName={transaction.userName}\n                    date={transaction.date}\n                    amount={transaction.amount}\n                    sent={transaction.sent}\n                  />\n                ))}\n              </div>\n              <Button block variant=\"link\" className=\"text-muted\">\n                <small>{t(\"wallet.moreTransactions\")}</small>\n              </Button>\n            </Col>\n            <Col md={1} lg={2} className=\"d-none d-md-flex\"></Col>\n          </Row>\n        </Container>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Wallet;\n"]},"metadata":{},"sourceType":"module"}