{"ast":null,"code":"import _objectSpread from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Auth/SignUpDetails/index.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport SignUpAuthorDetails from \"./SignUpAuthorDetails\";\nimport SignUpClientDetails from \"./SignUpClientDetails\";\nimport SignUpRole from \"./SignUpRole\";\nlet DEFAULT_FORM = {\n  roles: [],\n  services: [],\n  location: \"\",\n  preferredServices: []\n};\n\nfunction SignupDetails() {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        step = _useState2[0],\n        setStep = _useState2[1];\n\n  const _useState3 = useState(DEFAULT_FORM),\n        _useState4 = _slicedToArray(_useState3, 2),\n        form = _useState4[0],\n        setForm = _useState4[1];\n\n  useEffect(() => {\n    if (step == 3) {\n      alert(\"Post to the API, do redirect.\");\n    }\n  }, [step]); // Add useEffect here to handle api submission when the last step is submitted.\n\n  const handleSubmit = updates => {\n    // Logging user here for demo purposes. Use useEffect to post to API.\n    console.log(_objectSpread({}, form, {}, updates));\n    setForm(_objectSpread({}, form, {}, updates));\n    setStep(step + 1);\n  };\n\n  const handleBackClick = updates => {\n    setForm(_objectSpread({}, form, {}, updates));\n    setStep(step - 1);\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return React.createElement(SignUpAuthorDetails, {\n          defaultValues: {\n            services: form.services,\n            location: form.location\n          },\n          onSubmit: handleSubmit,\n          onBackClick: handleBackClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      // Case 3 is submitting to the API\n\n      case 2:\n      case 3:\n        return React.createElement(SignUpClientDetails, {\n          defaultValues: form.preferredServices,\n          onSubmit: handleSubmit,\n          onBackClick: handleBackClick,\n          isFetching: step === 3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        });\n      // case 0:\n\n      default:\n        return React.createElement(SignUpRole, {\n          defaultValues: form.roles,\n          onSubmit: handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, renderStep());\n}\n\nexport default SignupDetails;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Auth/SignUpDetails/index.jsx"],"names":["React","useEffect","useState","SignUpAuthorDetails","SignUpClientDetails","SignUpRole","DEFAULT_FORM","roles","services","location","preferredServices","SignupDetails","step","setStep","form","setForm","alert","handleSubmit","updates","console","log","handleBackClick","renderStep"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,EAFO;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,iBAAiB,EAAE;AAJF,CAAnB;;AAOA,SAASC,aAAT,GAAyB;AAAA,oBACCT,QAAQ,CAAC,CAAD,CADT;AAAA;AAAA,QAChBU,IADgB;AAAA,QACVC,OADU;;AAAA,qBAECX,QAAQ,CAACI,YAAD,CAFT;AAAA;AAAA,QAEhBQ,IAFgB;AAAA,QAEVC,OAFU;;AAGvBd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAI,IAAI,CAAZ,EAAe;AACbI,MAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACJ,IAAD,CAJM,CAAT,CAHuB,CAQvB;;AAEA,QAAMK,YAAY,GAAGC,OAAO,IAAI;AAC9B;AACAC,IAAAA,OAAO,CAACC,GAAR,mBAAiBN,IAAjB,MAA0BI,OAA1B;AACAH,IAAAA,OAAO,mBACFD,IADE,MAEFI,OAFE,EAAP;AAIAL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GARD;;AAUA,QAAMS,eAAe,GAAGH,OAAO,IAAI;AACjCH,IAAAA,OAAO,mBACFD,IADE,MAEFI,OAFE,EAAP;AAIAL,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAND;;AAQA,QAAMU,UAAU,GAAG,MAAM;AACvB,YAAQV,IAAR;AACE,WAAK,CAAL;AACE,eACE,oBAAC,mBAAD;AACE,UAAA,aAAa,EAAE;AAAEJ,YAAAA,QAAQ,EAAEM,IAAI,CAACN,QAAjB;AAA2BC,YAAAA,QAAQ,EAAEK,IAAI,CAACL;AAA1C,WADjB;AAEE,UAAA,QAAQ,EAAEQ,YAFZ;AAGE,UAAA,WAAW,EAAEI,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOF;;AACA,WAAK,CAAL;AACA,WAAK,CAAL;AACE,eACE,oBAAC,mBAAD;AACE,UAAA,aAAa,EAAEP,IAAI,CAACJ,iBADtB;AAEE,UAAA,QAAQ,EAAEO,YAFZ;AAGE,UAAA,WAAW,EAAEI,eAHf;AAIE,UAAA,UAAU,EAAET,IAAI,KAAK,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQF;;AACA;AACE,eACE,oBAAC,UAAD;AAAY,UAAA,aAAa,EAAEE,IAAI,CAACP,KAAhC;AAAuC,UAAA,QAAQ,EAAEU,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAtBJ;AA0BD,GA3BD;;AA6BA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMK,UAAU,EAAhB,CAAP;AACD;;AAED,eAAeX,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport SignUpAuthorDetails from \"./SignUpAuthorDetails\";\nimport SignUpClientDetails from \"./SignUpClientDetails\";\nimport SignUpRole from \"./SignUpRole\";\n\nlet DEFAULT_FORM = {\n  roles: [],\n  services: [],\n  location: \"\",\n  preferredServices: []\n};\n\nfunction SignupDetails() {\n  const [step, setStep] = useState(1);\n  const [form, setForm] = useState(DEFAULT_FORM);\n  useEffect(() => {\n    if (step == 3) {\n      alert(\"Post to the API, do redirect.\");\n    }\n  }, [step]);\n  // Add useEffect here to handle api submission when the last step is submitted.\n\n  const handleSubmit = updates => {\n    // Logging user here for demo purposes. Use useEffect to post to API.\n    console.log({ ...form, ...updates });\n    setForm({\n      ...form,\n      ...updates\n    });\n    setStep(step + 1);\n  };\n\n  const handleBackClick = updates => {\n    setForm({\n      ...form,\n      ...updates\n    });\n    setStep(step - 1);\n  };\n\n  const renderStep = () => {\n    switch (step) {\n      case 1:\n        return (\n          <SignUpAuthorDetails\n            defaultValues={{ services: form.services, location: form.location }}\n            onSubmit={handleSubmit}\n            onBackClick={handleBackClick}\n          />\n        );\n      // Case 3 is submitting to the API\n      case 2:\n      case 3:\n        return (\n          <SignUpClientDetails\n            defaultValues={form.preferredServices}\n            onSubmit={handleSubmit}\n            onBackClick={handleBackClick}\n            isFetching={step === 3}\n          />\n        );\n      // case 0:\n      default:\n        return (\n          <SignUpRole defaultValues={form.roles} onSubmit={handleSubmit} />\n        );\n    }\n  };\n\n  return <div>{renderStep()}</div>;\n}\n\nexport default SignupDetails;\n"]},"metadata":{},"sourceType":"module"}