{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/SampleWork/src/Profile/EditProfile/ProfileDetails.jsx\";\nimport { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { renderInvalidMessage } from \"SharedComponents/ValidationMessage\";\n\nfunction ProfileDetails() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n\n  return React.createElement(Card, {\n    className: \"mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"User Details\"), React.createElement(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"firstName\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Form.Control, {\n    name: \"firstName\",\n    placeholder: \"First Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.firstName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), errors.firstName && renderInvalidMessage()), React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"lastName\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Form.Control, {\n    name: \"lastName\",\n    placeholder: \"Last Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.lastName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), errors.lastName && renderInvalidMessage())), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"title\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Form.Control, {\n    name: \"title\",\n    placeholder: \"Title\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.title),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), errors.title && renderInvalidMessage()), React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"company\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Company\"), React.createElement(Form.Control, {\n    name: \"company\",\n    placeholder: \"Company\",\n    ref: register,\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"location\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"City\"), React.createElement(Form.Control, {\n    name: \"city\",\n    placeholder: \"City\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.city),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), errors.city && renderInvalidMessage()), React.createElement(Form.Group, {\n    as: Col,\n    xs: \"12\",\n    sm: \"6\",\n    controlId: \"country\",\n    className: \"mb-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Form.Control, {\n    name: \"country\",\n    placeholder: \"Country\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    isInvalid: Boolean(errors.country),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), errors.country && renderInvalidMessage())), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default ProfileDetails;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/SampleWork/src/Profile/EditProfile/ProfileDetails.jsx"],"names":["Button","Col","Card","Form","Row","React","useForm","renderInvalidMessage","ProfileDetails","register","handleSubmit","errors","onSubmit","data","console","log","required","Boolean","firstName","lastName","title","city","country"],"mappings":"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","sourcesContent":["import { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { renderInvalidMessage } from \"SharedComponents/ValidationMessage\";\n\nfunction ProfileDetails() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n  return (\n    <Card className=\"mb-3\">\n      <Card.Body>\n        <Card.Title>User Details</Card.Title>\n        <Form noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Row>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"firstName\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">First Name</Form.Label>\n              <Form.Control\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.firstName)}\n              />\n              {errors.firstName && renderInvalidMessage()}\n            </Form.Group>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"lastName\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">Last Name</Form.Label>\n              <Form.Control\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.lastName)}\n              />\n              {errors.lastName && renderInvalidMessage()}\n            </Form.Group>\n          </Row>\n          <Row>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"title\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">Title</Form.Label>\n              <Form.Control\n                name=\"title\"\n                placeholder=\"Title\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.title)}\n              />\n              {errors.title && renderInvalidMessage()}\n            </Form.Group>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"company\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">Company</Form.Label>\n              <Form.Control\n                name=\"company\"\n                placeholder=\"Company\"\n                ref={register}\n                type=\"text\"\n              />\n            </Form.Group>\n          </Row>\n          <Row>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"location\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">City</Form.Label>\n              <Form.Control\n                name=\"city\"\n                placeholder=\"City\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.city)}\n              />\n              {errors.city && renderInvalidMessage()}\n            </Form.Group>\n            <Form.Group\n              as={Col}\n              xs=\"12\"\n              sm=\"6\"\n              controlId=\"country\"\n              className=\"mb-0\"\n            >\n              <Form.Label className=\"sr-only\">Country</Form.Label>\n              <Form.Control\n                name=\"country\"\n                placeholder=\"Country\"\n                ref={register({ required: true })}\n                type=\"text\"\n                isInvalid={Boolean(errors.country)}\n              />\n              {errors.country && renderInvalidMessage()}\n            </Form.Group>\n          </Row>\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}