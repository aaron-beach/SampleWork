{"ast":null,"code":"import _objectSpread from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/SendForm.jsx\";\nimport { BREAK_POINT_SMALLEST_SCREEN, BREAK_POINT_SMALL_SCREEN, CURRENCY_DAI, CURRENCY_ETH } from \"./constants.js\";\nimport { ButtonGroup as BootstrapButtonGroup, Button, Card, Col, Form, Modal } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport convertIcon from \"images/currencyConvert.svg\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    display: grid;\n    grid-template-columns: 37px auto;\n  }\n`;\nconst ButtonGroup = styled(BootstrapButtonGroup)`\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  margin-right: 1rem;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    grid-column-start: 1;\n    grid-column-end: 3;\n  }\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    border-right: none;\n    padding-right: 0;\n    margin-right: 0;\n  }\n`;\nconst SendAmountFormRow = styled(Form.Row)`\n  margin-bottom: 2rem;\n\n  & .form-group {\n    padding-right: 0;\n  }\n\n  & .form-group + .form-group {\n    padding-left: 0;\n  }\n\n  & .btn-group {\n    height: calc(100% - 2px);\n    transform: translateY(1px);\n    padding-left: 0;\n\n    & .btn:first-child {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  & .form-control {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    flex-direction: column;\n    margin-left: 0;\n    margin-right: 0;\n\n    .form-group {\n      padding-left: 0;\n    }\n\n    .modal-amount-input {\n      margin-bottom: 1rem;\n    }\n\n    .btn-group {\n      padding-right: 0;\n    }\n\n    & .btn-group {\n      height: calc(100% - 2px);\n      transform: translateY(1px);\n      padding-left: 0;\n\n      & .btn:first-child {\n        border-top-left-radius: 4px;\n        border-bottom-left-radius: 4px;\n      }\n    }\n\n    & .form-control {\n      border-top-right-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n  }\n`;\nconst Icon = styled.img`\n  width: 37px;\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    display: none;\n  }\n`;\nconst SendButtonWrapper = styled.div`\n  width: 100%;\n\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n    margin-top: 1rem;\n    padding-top: 1rem;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  }\n`;\nconst DEFAULT_SEND_FORM = {\n  walletID: \"\",\n  amount: \"\",\n  currency: CURRENCY_DAI\n};\n\nfunction SendForm({\n  currency\n}) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showConvertModal = _useState2[0],\n        setShowConvertModal = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showSendModal = _useState4[0],\n        setSendConvertModal = _useState4[1];\n\n  const _useState5 = useState(DEFAULT_SEND_FORM),\n        _useState6 = _slicedToArray(_useState5, 2),\n        sendForm = _useState6[0],\n        setSendForm = _useState6[1];\n\n  const _useTranslation = useTranslation(),\n        t = _useTranslation.t;\n\n  const handleConvertClick = () => {\n    setShowConvertModal(true);\n  };\n\n  const handleCloseConvertModal = () => {\n    setShowConvertModal(false);\n  };\n\n  const handleSendClick = () => {\n    setSendConvertModal(true);\n  };\n\n  const handleCloseSendModal = () => {\n    setSendForm(DEFAULT_SEND_FORM);\n    setSendConvertModal(false);\n  };\n\n  const handleSendFormChange = e => {\n    setSendForm(_objectSpread({}, sendForm, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Card, {\n    className: \"mt-5 pl-3 pr-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    src: convertIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), React.createElement(ButtonGroup, {\n    \"aria-label\": \"Send options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: currency === CURRENCY_DAI,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_DAI ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"DAI\"), React.createElement(Button, {\n    disabled: currency === CURRENCY_ETH,\n    onClick: handleConvertClick,\n    variant: currency === CURRENCY_ETH ? \"primary\" : \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"ETH\")), React.createElement(SendButtonWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Button, {\n    block: true,\n    onClick: handleSendClick,\n    variant: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, t(\"wallet.send\"), \" \", React.createElement(\"i\", {\n    className: \"fas fa-arrow-circle-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))))), React.createElement(Modal, {\n    show: showConvertModal,\n    onHide: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, t(\"wallet.convertModalTitle\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, t(\"wallet.convertModalBody\"), \" \", currency === CURRENCY_ETH ? CURRENCY_DAI : CURRENCY_ETH), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"link\",\n    onClick: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, t(\"wallet.cancel\")), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleCloseConvertModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, t(\"wallet.convert\")))), React.createElement(Modal, {\n    show: showSendModal,\n    onHide: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, React.createElement(Modal.Header, {\n    closeButton: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Modal.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, t(\"wallet.sendModalTitle\"))), React.createElement(Modal.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, t(\"wallet.sendModalBody\")), React.createElement(Form.Group, {\n    controlId: \"walletID\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, t(\"wallet.walletID\")), React.createElement(Form.Control, {\n    name: \"walletID\",\n    type: \"text\",\n    placeholder: t(\"wallet.walletID\"),\n    value: sendForm.walletID,\n    onChange: handleSendFormChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  })), React.createElement(SendAmountFormRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, t(\"wallet.amount\")), React.createElement(Form.Control, {\n    className: \"modal-amount-input\",\n    placeholder: t(\"wallet.amount\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    as: Col,\n    controlId: \"formGridCity\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }, React.createElement(BootstrapButtonGroup, {\n    as: Col,\n    \"aria-label\": \"Send options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, \"DAI\"), React.createElement(Button, {\n    variant: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, \"ETH\"))))), React.createElement(Modal.Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"link\",\n    onClick: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, t(\"wallet.cancel\")), React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleCloseSendModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, t(\"wallet.send\")))));\n}\n\nexport default SendForm;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Wallet/MyWallets/Wallet/SendForm.jsx"],"names":["BREAK_POINT_SMALLEST_SCREEN","BREAK_POINT_SMALL_SCREEN","CURRENCY_DAI","CURRENCY_ETH","ButtonGroup","BootstrapButtonGroup","Button","Card","Col","Form","Modal","React","useState","styled","useTranslation","Wrapper","div","SendAmountFormRow","Row","Icon","img","SendButtonWrapper","DEFAULT_SEND_FORM","walletID","amount","currency","SendForm","showConvertModal","setShowConvertModal","showSendModal","setSendConvertModal","sendForm","setSendForm","t","handleConvertClick","handleCloseConvertModal","handleSendClick","handleCloseSendModal","handleSendFormChange","e","target","name","value","convertIcon"],"mappings":";;;AAAA,SACEA,2BADF,EAEEC,wBAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,gBALP;AAMA,SACEC,WAAW,IAAIC,oBADjB,EAEEC,MAFF,EAGEC,IAHF,EAIEC,GAJF,EAKEC,IALF,EAMEC,KANF,QAOO,iBAPP;AAQA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAGA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI;;;uBAGJf,wBAAyB;;;;CAHhD;AASA,MAAMG,WAAW,GAAGS,MAAM,CAACR,oBAAD,CAAuB;;;;;uBAK1BL,2BAA4B;;;;uBAI5BC,wBAAyB;;;;;CAThD;AAgBA,MAAMgB,iBAAiB,GAAGJ,MAAM,CAACJ,IAAI,CAACS,GAAN,CAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBA4BpBjB,wBAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA5BhD;AA+DA,MAAMkB,IAAI,GAAGN,MAAM,CAACO,GAAI;;uBAEDpB,2BAA4B;;;CAFnD;AAOA,MAAMqB,iBAAiB,GAAGR,MAAM,CAACG,GAAI;;;uBAGdf,wBAAyB;;;;;;;CAHhD;AAYA,MAAMqB,iBAAiB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,EADc;AAExBC,EAAAA,MAAM,EAAE,EAFgB;AAGxBC,EAAAA,QAAQ,EAAEvB;AAHc,CAA1B;;AAMA,SAASwB,QAAT,CAAkB;AAAED,EAAAA;AAAF,CAAlB,EAAgC;AAAA,oBACkBb,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,QACvBe,gBADuB;AAAA,QACLC,mBADK;;AAAA,qBAEehB,QAAQ,CAAC,KAAD,CAFvB;AAAA;AAAA,QAEvBiB,aAFuB;AAAA,QAERC,mBAFQ;;AAAA,qBAGElB,QAAQ,CAACU,iBAAD,CAHV;AAAA;AAAA,QAGvBS,QAHuB;AAAA,QAGbC,WAHa;;AAAA,0BAIhBlB,cAAc,EAJE;AAAA,QAItBmB,CAJsB,mBAItBA,CAJsB;;AAM9B,QAAMC,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAIA,QAAMO,uBAAuB,GAAG,MAAM;AACpCP,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAFD;;AAIA,QAAMQ,eAAe,GAAG,MAAM;AAC5BN,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD,GAFD;;AAIA,QAAMO,oBAAoB,GAAG,MAAM;AACjCL,IAAAA,WAAW,CAACV,iBAAD,CAAX;AACAQ,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,GAHD;;AAKA,QAAMQ,oBAAoB,GAAGC,CAAC,IAAI;AAChCP,IAAAA,WAAW,mBACND,QADM;AAET,OAACQ,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFjB,OAAX;AAID,GALD;;AAOA,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,WAAD;AAAa,kBAAW,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAElB,QAAQ,KAAKvB,YADzB;AAEE,IAAA,OAAO,EAAEgC,kBAFX;AAGE,IAAA,OAAO,EAAET,QAAQ,KAAKvB,YAAb,GAA4B,SAA5B,GAAwC,OAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAQE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEuB,QAAQ,KAAKtB,YADzB;AAEE,IAAA,OAAO,EAAE+B,kBAFX;AAGE,IAAA,OAAO,EAAET,QAAQ,KAAKtB,YAAb,GAA4B,SAA5B,GAAwC,OAHnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CAFF,EAkBE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,MAAb;AAAc,IAAA,OAAO,EAAEiC,eAAvB;AAAwC,IAAA,OAAO,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,CAAC,CAAC,aAAD,CADJ,OACqB;AAAG,IAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrB,CADF,CAlBF,CADF,CADF,EA4BE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEN,gBAAb;AAA+B,IAAA,MAAM,EAAEQ,uBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcF,CAAC,CAAC,0BAAD,CAAf,CADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,CAAC,CAAC,yBAAD,CADJ,EACiC,GADjC,EAEGR,QAAQ,KAAKtB,YAAb,GAA4BD,YAA5B,GAA2CC,YAF9C,CAJF,EAQE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAEgC,uBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,eAAD,CADJ,CADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEE,uBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,CAAC,CAAC,gBAAD,CADJ,CAJF,CARF,CA5BF,EA8CE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEJ,aAAb;AAA4B,IAAA,MAAM,EAAEQ,oBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcJ,CAAC,CAAC,uBAAD,CAAf,CADF,CADF,EAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,CAAC,CAAC,sBAAD,CAAL,CADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,CAAC,CAAC,iBAAD,CAAlC,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAEA,CAAC,CAAC,iBAAD,CAHhB;AAIE,IAAA,KAAK,EAAEF,QAAQ,CAACR,QAJlB;AAKE,IAAA,QAAQ,EAAEe,oBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,EAYE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAE9B,GAAhB;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCyB,CAAC,CAAC,eAAD,CAAlC,CADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,WAAW,EAAEA,CAAC,CAAC,eAAD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,EAAE,EAAEzB,GAAhB;AAAqB,IAAA,SAAS,EAAC,cAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,EAAE,EAAEA,GAA1B;AAA+B,kBAAW,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CADF,CATF,CAZF,CAJF,EAiCE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,OAAO,EAAE6B,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAAC,eAAD,CADJ,CADF,EAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEI,oBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,CAAC,CAAC,aAAD,CADJ,CAJF,CAjCF,CA9CF,CADF;AA2FD;;AAED,eAAeP,QAAf","sourcesContent":["import {\n  BREAK_POINT_SMALLEST_SCREEN,\n  BREAK_POINT_SMALL_SCREEN,\n  CURRENCY_DAI,\n  CURRENCY_ETH\n} from \"./constants.js\";\nimport {\n  ButtonGroup as BootstrapButtonGroup,\n  Button,\n  Card,\n  Col,\n  Form,\n  Modal\n} from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport convertIcon from \"images/currencyConvert.svg\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    display: grid;\n    grid-template-columns: 37px auto;\n  }\n`;\n\nconst ButtonGroup = styled(BootstrapButtonGroup)`\n  padding-left: 0.5rem;\n  padding-right: 1rem;\n  margin-right: 1rem;\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    grid-column-start: 1;\n    grid-column-end: 3;\n  }\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    border-right: none;\n    padding-right: 0;\n    margin-right: 0;\n  }\n`;\n\nconst SendAmountFormRow = styled(Form.Row)`\n  margin-bottom: 2rem;\n\n  & .form-group {\n    padding-right: 0;\n  }\n\n  & .form-group + .form-group {\n    padding-left: 0;\n  }\n\n  & .btn-group {\n    height: calc(100% - 2px);\n    transform: translateY(1px);\n    padding-left: 0;\n\n    & .btn:first-child {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n  }\n\n  & .form-control {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    flex-direction: column;\n    margin-left: 0;\n    margin-right: 0;\n\n    .form-group {\n      padding-left: 0;\n    }\n\n    .modal-amount-input {\n      margin-bottom: 1rem;\n    }\n\n    .btn-group {\n      padding-right: 0;\n    }\n\n    & .btn-group {\n      height: calc(100% - 2px);\n      transform: translateY(1px);\n      padding-left: 0;\n\n      & .btn:first-child {\n        border-top-left-radius: 4px;\n        border-bottom-left-radius: 4px;\n      }\n    }\n\n    & .form-control {\n      border-top-right-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n  }\n`;\n\nconst Icon = styled.img`\n  width: 37px;\n  @media (max-width: ${BREAK_POINT_SMALLEST_SCREEN}) {\n    display: none;\n  }\n`;\n\nconst SendButtonWrapper = styled.div`\n  width: 100%;\n\n  @media (max-width: ${BREAK_POINT_SMALL_SCREEN}) {\n    border-top: 1px solid rgba(0, 0, 0, 0.1);\n    margin-top: 1rem;\n    padding-top: 1rem;\n    grid-column-start: 1;\n    grid-column-end: 3;\n  }\n`;\n\nconst DEFAULT_SEND_FORM = {\n  walletID: \"\",\n  amount: \"\",\n  currency: CURRENCY_DAI\n};\n\nfunction SendForm({ currency }) {\n  const [showConvertModal, setShowConvertModal] = useState(false);\n  const [showSendModal, setSendConvertModal] = useState(false);\n  const [sendForm, setSendForm] = useState(DEFAULT_SEND_FORM);\n  const { t } = useTranslation();\n\n  const handleConvertClick = () => {\n    setShowConvertModal(true);\n  };\n\n  const handleCloseConvertModal = () => {\n    setShowConvertModal(false);\n  };\n\n  const handleSendClick = () => {\n    setSendConvertModal(true);\n  };\n\n  const handleCloseSendModal = () => {\n    setSendForm(DEFAULT_SEND_FORM);\n    setSendConvertModal(false);\n  };\n\n  const handleSendFormChange = e => {\n    setSendForm({\n      ...sendForm,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <>\n      <Card className=\"mt-5 pl-3 pr-3\">\n        <Wrapper>\n          <Icon src={convertIcon} />\n          <ButtonGroup aria-label=\"Send options\">\n            <Button\n              disabled={currency === CURRENCY_DAI}\n              onClick={handleConvertClick}\n              variant={currency === CURRENCY_DAI ? \"primary\" : \"light\"}\n            >\n              DAI\n            </Button>\n            <Button\n              disabled={currency === CURRENCY_ETH}\n              onClick={handleConvertClick}\n              variant={currency === CURRENCY_ETH ? \"primary\" : \"light\"}\n            >\n              ETH\n            </Button>\n          </ButtonGroup>\n          <SendButtonWrapper>\n            <Button block onClick={handleSendClick} variant=\"light\">\n              {t(\"wallet.send\")} <i className=\"fas fa-arrow-circle-right\"></i>\n            </Button>\n          </SendButtonWrapper>\n        </Wrapper>\n      </Card>\n\n      <Modal show={showConvertModal} onHide={handleCloseConvertModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{t(\"wallet.convertModalTitle\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {t(\"wallet.convertModalBody\")}{\" \"}\n          {currency === CURRENCY_ETH ? CURRENCY_DAI : CURRENCY_ETH}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" onClick={handleCloseConvertModal}>\n            {t(\"wallet.cancel\")}\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseConvertModal}>\n            {t(\"wallet.convert\")}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      <Modal show={showSendModal} onHide={handleCloseSendModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{t(\"wallet.sendModalTitle\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>{t(\"wallet.sendModalBody\")}</p>\n          <Form.Group controlId=\"walletID\">\n            <Form.Label className=\"sr-only\">{t(\"wallet.walletID\")}</Form.Label>\n            <Form.Control\n              name=\"walletID\"\n              type=\"text\"\n              placeholder={t(\"wallet.walletID\")}\n              value={sendForm.walletID}\n              onChange={handleSendFormChange}\n            />\n          </Form.Group>\n          <SendAmountFormRow>\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <Form.Label className=\"sr-only\">{t(\"wallet.amount\")}</Form.Label>\n              <Form.Control\n                className=\"modal-amount-input\"\n                placeholder={t(\"wallet.amount\")}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formGridCity\">\n              <BootstrapButtonGroup as={Col} aria-label=\"Send options\">\n                <Button variant=\"light\">DAI</Button>\n                <Button variant=\"primary\">ETH</Button>\n              </BootstrapButtonGroup>\n            </Form.Group>\n          </SendAmountFormRow>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"link\" onClick={handleCloseSendModal}>\n            {t(\"wallet.cancel\")}\n          </Button>\n          <Button variant=\"primary\" onClick={handleCloseSendModal}>\n            {t(\"wallet.send\")}\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default SendForm;\n"]},"metadata":{},"sourceType":"module"}