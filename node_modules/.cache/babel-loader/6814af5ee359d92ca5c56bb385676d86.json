{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Profile/EditProfile/ProfileDetails.jsx\";\nimport { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ProfileDetails() {\n  const _useForm = useForm(),\n        register = _useForm.register,\n        handleSubmit = _useForm.handleSubmit,\n        errors = _useForm.errors;\n\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    className: \"p-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"User Details\"), React.createElement(Form, {\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"UserName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"firstName\",\n    placeholder: \"First Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), errors.firstName && React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, 'Please provide a valid first name')), React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"lastName\",\n    placeholder: \"Last Name\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), errors.lastName && React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, 'Please provide a valid last name'))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    name: \"title\",\n    placeholder: \"Title\",\n    ref: register({\n      required: true\n    }),\n    type: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"company\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    as: Row,\n    controlId: \"location\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"City\"), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    placeholder: \"City\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(Form.Label, {\n    className: \"sr-only\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Country\"), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    placeholder: \"Country\",\n    type: \"text\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Save\"))));\n}\n\nexport default ProfileDetails;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Profile/EditProfile/ProfileDetails.jsx"],"names":["Button","Col","Card","Form","Row","React","useForm","ProfileDetails","register","handleSubmit","errors","onSubmit","data","console","log","required","firstName","lastName"],"mappings":"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","sourcesContent":["import { Button, Col, Card, Form, Row } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nfunction ProfileDetails() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => {\n    console.log(data);\n  }; // form submit function will invoke after successful validation\n\n  return (\n    <Card>\n      <Card.Body>\n        <Card.Title className=\"p-2\">User Details</Card.Title>\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group as={Row} controlId=\"UserName\">\n            <Form.Label className=\"sr-only\">First Name</Form.Label>\n            <Col>\n              <Form.Control\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n              />\n              {errors.firstName && \n                (<Form.Control.Feedback type=\"invalid\">\n                  {'Please provide a valid first name'} \n                </Form.Control.Feedback>)\n              }\n            </Col>\n            <Form.Label className=\"sr-only\">Last Name</Form.Label>\n            <Col>\n              <Form.Control\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                ref={register({ required: true })}\n                type=\"text\"\n              />\n              {errors.lastName && \n                (\n                  <Form.Control.Feedback type=\"invalid\">\n                    {'Please provide a valid last name'}\n                  </Form.Control.Feedback>\n                )\n              }\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"title\">\n            <Form.Label className=\"sr-only\">Title</Form.Label>\n            <Col>\n              <Form.Control \n                name=\"title\"\n                placeholder=\"Title\"\n                ref={register({ required: true })}\n                type=\"text\"\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"company\">\n            \n          </Form.Group>\n\n          <Form.Group as={Row} controlId=\"location\">\n            <Form.Label className=\"sr-only\">City</Form.Label>\n            <Col>\n              <Form.Control placeholder=\"City\" type=\"text\" required />\n            </Col>\n            <Form.Label className=\"sr-only\">Country</Form.Label>\n            <Col>\n              <Form.Control placeholder=\"Country\" type=\"text\" required />\n            </Col>\n          </Form.Group>\n\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ProfileDetails;\n"]},"metadata":{},"sourceType":"module"}