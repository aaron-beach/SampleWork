{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Projects/Controls/ControlItem.jsx\";\nimport { Accordion } from \"react-bootstrap\";\nimport React from \"react\";\nimport Toggle from \"./Toggle\";\nimport arrowIcon from \"images/arrowDown.svg\";\nimport styled from \"styled-components\";\nconst Wrapper = styled.div`\n  border-bottom: 1px solid #e0e0e0;\n  margin-left: -1.25rem;\n  margin-right: -1.25rem;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n`;\n\nfunction ControlItem({\n  children,\n  title,\n  isExpanded,\n  type\n}) {\n  return React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Accordion.Toggle, {\n    as: Toggle,\n    eventKey: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title, React.createElement(\"img\", {\n    src: arrowIcon,\n    alt: \"\",\n    className: `arrow ${isExpanded ? \"invert\" : \"\"}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(Accordion.Collapse, {\n    eventKey: type,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(React.Fragment, null, children)));\n}\n\nexport default ControlItem;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Projects/Controls/ControlItem.jsx"],"names":["Accordion","React","Toggle","styled","Wrapper","div","ControlItem","children","title","isExpanded","type","arrowIcon"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;;;;;;CAA3B;;AAQA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,UAAnB;AAA+BC,EAAAA;AAA/B,CAArB,EAA4D;AAC1D,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,EAAE,EAAER,MAAtB;AAA8B,IAAA,QAAQ,EAAEQ,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KADH,EAEE;AACE,IAAA,GAAG,EAAEG,SADP;AAEE,IAAA,GAAG,EAAC,EAFN;AAGE,IAAA,SAAS,EAAG,SAAQF,UAAU,GAAG,QAAH,GAAc,EAAG,EAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,QAAQ,EAAEC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0CAAGH,QAAH,CADF,CATF,CADF;AAeD;;AAED,eAAeD,WAAf","sourcesContent":["import { Accordion } from \"react-bootstrap\";\nimport React from \"react\";\nimport Toggle from \"./Toggle\";\nimport arrowIcon from \"images/arrowDown.svg\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  border-bottom: 1px solid #e0e0e0;\n  margin-left: -1.25rem;\n  margin-right: -1.25rem;\n  padding-left: 1.25rem;\n  padding-right: 1.25rem;\n`;\n\nfunction ControlItem({ children, title, isExpanded, type }) {\n  return (\n    <Wrapper>\n      <Accordion.Toggle as={Toggle} eventKey={type}>\n        {title}\n        <img\n          src={arrowIcon}\n          alt=\"\"\n          className={`arrow ${isExpanded ? \"invert\" : \"\"}`}\n        />\n      </Accordion.Toggle>\n      <Accordion.Collapse eventKey={type}>\n        <>{children}</>\n      </Accordion.Collapse>\n    </Wrapper>\n  );\n}\n\nexport default ControlItem;\n"]},"metadata":{},"sourceType":"module"}