{"ast":null,"code":"import _slicedToArray from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Auth/SignUpDetails/SignUpClientDetails.jsx\";\nimport { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\nimport ServiceImage from \"./ServiceImage\";\nimport Spinner from \"SharedComponents/Spinner\";\nimport services from \"constants/services\";\nimport styled from \"styled-components\";\nimport { useTranslation } from \"react-i18next\";\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-column-gap: 10px;\n  grid-row-gap: 2px;\n`;\n\nfunction SignUpClientDetails({\n  defaultValues = [],\n  isFetching,\n  onBackClick,\n  onSubmit\n}) {\n  const DEFAULT_FORM = {\n    services: services.map(service => _objectSpread({}, service, {\n      checked: defaultValues.includes(service.key)\n    }))\n  };\n\n  const _useState = useState(DEFAULT_FORM),\n        _useState2 = _slicedToArray(_useState, 2),\n        form = _useState2[0],\n        setForm = _useState2[1];\n\n  const _useTranslation = useTranslation(),\n        t = _useTranslation.t;\n\n  const getSubmitPayload = () => {\n    return {\n      preferredServices: form.services.map(service => {\n        if (service.checked) {\n          return service.key;\n        }\n\n        return null;\n      }).filter(x => x)\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(getSubmitPayload());\n  };\n\n  const handleBackClick = () => {\n    onBackClick(getSubmitPayload());\n  };\n\n  const handleToggleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          checked = _e$target.checked;\n    setForm(_objectSpread({}, form, {\n      services: form.services.map((service, i) => {\n        if (service.key === name) {\n          return _objectSpread({}, service, {\n            checked\n          });\n        }\n\n        return service;\n      })\n    }));\n  };\n\n  const handleButtonClick = e => {\n    const name = e.target.name;\n    setForm(_objectSpread({}, form, {\n      services: form.services.map((service, i) => {\n        if (service.key === name) {\n          return _objectSpread({}, service, {\n            checked: !form.services.find(s => s.key === name).checked\n          });\n        }\n\n        return service;\n      })\n    }));\n  };\n\n  const isFormValid = () => {\n    if (!form.services.reduce((acc, service) => {\n      return acc || service.checked;\n    }, false)) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Col, {\n    className: \"d-none d-md-flex\",\n    md: 1,\n    lg: 2,\n    xl: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: \"login-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, Hello, \" Hugo,\"), React.createElement(\"span\", {\n    className: \"d-block mt-5 lead text-center text-muted pl-5 pr-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Who do you want to connect to?\"), React.createElement(\"form\", {\n    className: \"p-2 p-t-3 p-md-3 p-xl-5\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, form.services.map(service => {\n    return React.createElement(Form.Group, {\n      className: \"mb-0\",\n      key: `service-${service.key}`,\n      controlId: `service-${service.key}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      className: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, service.name), React.createElement(Form.Check, {\n      className: \"p-0\",\n      name: service.key,\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Form.Check.Label, {\n      className: \"w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ServiceImage, {\n      image: service.image,\n      keyName: service.key,\n      name: service.name,\n      checked: service.checked,\n      count: service.count,\n      onButtonClick: handleButtonClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Check.Input, {\n      className: \"invisible\",\n      name: service.key,\n      type: \"checkbox\",\n      onChange: handleToggleChange,\n      checked: service.checked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })));\n  })), React.createElement(Button, {\n    block: true,\n    type: \"submit\",\n    disabled: !isFormValid(),\n    className: \"mt-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Next\"), React.createElement(Button, {\n    onClick: handleBackClick,\n    block: true,\n    variant: \"link\",\n    className: \"text-muted mt-0 back-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Back.\")))), isFetching ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }) : null)), React.createElement(Col, {\n    className: \"d-none d-md-flex\",\n    md: 1,\n    lg: 2,\n    xl: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })));\n}\n\nexport default SignUpClientDetails;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Auth/SignUpDetails/SignUpClientDetails.jsx"],"names":["Button","Card","Col","Container","Form","Row","React","useState","ServiceImage","Spinner","services","styled","useTranslation","Grid","div","SignUpClientDetails","defaultValues","isFetching","onBackClick","onSubmit","DEFAULT_FORM","map","service","checked","includes","key","form","setForm","t","getSubmitPayload","preferredServices","filter","x","handleSubmit","e","preventDefault","handleBackClick","handleToggleChange","target","name","i","handleButtonClick","find","s","isFormValid","reduce","acc","Hello","image","count"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,IAAvC,EAA6CC,GAA7C,QAAwD,iBAAxD;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,QAA+B,eAA/B;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACG,GAAI;;;;;CAAxB;;AAOA,SAASC,mBAAT,CAA6B;AAC3BC,EAAAA,aAAa,GAAG,EADW;AAE3BC,EAAAA,UAF2B;AAG3BC,EAAAA,WAH2B;AAI3BC,EAAAA;AAJ2B,CAA7B,EAKG;AACD,QAAMC,YAAY,GAAG;AACnBV,IAAAA,QAAQ,EAAEA,QAAQ,CAACW,GAAT,CAAaC,OAAO,sBACzBA,OADyB;AAE5BC,MAAAA,OAAO,EAAEP,aAAa,CAACQ,QAAd,CAAuBF,OAAO,CAACG,GAA/B;AAFmB,MAApB;AADS,GAArB;;AADC,oBAQuBlB,QAAQ,CAACa,YAAD,CAR/B;AAAA;AAAA,QAQMM,IARN;AAAA,QAQYC,OARZ;;AAAA,0BASaf,cAAc,EAT3B;AAAA,QASOgB,CATP,mBASOA,CATP;;AAWD,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,WAAO;AACLC,MAAAA,iBAAiB,EAAEJ,IAAI,CAAChB,QAAL,CAChBW,GADgB,CACZC,OAAO,IAAI;AACd,YAAIA,OAAO,CAACC,OAAZ,EAAqB;AACnB,iBAAOD,OAAO,CAACG,GAAf;AACD;;AACD,eAAO,IAAP;AACD,OANgB,EAOhBM,MAPgB,CAOTC,CAAC,IAAIA,CAPI;AADd,KAAP;AAUD,GAXD;;AAaA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAhB,IAAAA,QAAQ,CAACU,gBAAgB,EAAjB,CAAR;AACD,GAHD;;AAKA,QAAMO,eAAe,GAAG,MAAM;AAC5BlB,IAAAA,WAAW,CAACW,gBAAgB,EAAjB,CAAX;AACD,GAFD;;AAIA,QAAMQ,kBAAkB,GAAGH,CAAC,IAAI;AAAA,sBACJA,CAAC,CAACI,MADE;AAAA,UACtBC,IADsB,aACtBA,IADsB;AAAA,UAChBhB,OADgB,aAChBA,OADgB;AAE9BI,IAAAA,OAAO,mBACFD,IADE;AAELhB,MAAAA,QAAQ,EAAEgB,IAAI,CAAChB,QAAL,CAAcW,GAAd,CAAkB,CAACC,OAAD,EAAUkB,CAAV,KAAgB;AAC1C,YAAIlB,OAAO,CAACG,GAAR,KAAgBc,IAApB,EAA0B;AACxB,mCAAYjB,OAAZ;AAAqBC,YAAAA;AAArB;AACD;;AACD,eAAOD,OAAP;AACD,OALS;AAFL,OAAP;AASD,GAXD;;AAaA,QAAMmB,iBAAiB,GAAGP,CAAC,IAAI;AAAA,UACrBK,IADqB,GACZL,CAAC,CAACI,MADU,CACrBC,IADqB;AAE7BZ,IAAAA,OAAO,mBACFD,IADE;AAELhB,MAAAA,QAAQ,EAAEgB,IAAI,CAAChB,QAAL,CAAcW,GAAd,CAAkB,CAACC,OAAD,EAAUkB,CAAV,KAAgB;AAC1C,YAAIlB,OAAO,CAACG,GAAR,KAAgBc,IAApB,EAA0B;AACxB,mCACKjB,OADL;AAEEC,YAAAA,OAAO,EAAE,CAACG,IAAI,CAAChB,QAAL,CAAcgC,IAAd,CAAmBC,CAAC,IAAIA,CAAC,CAAClB,GAAF,KAAUc,IAAlC,EAAwChB;AAFpD;AAID;;AACD,eAAOD,OAAP;AACD,OARS;AAFL,OAAP;AAYD,GAdD;;AAgBA,QAAMsB,WAAW,GAAG,MAAM;AACxB,QACE,CAAClB,IAAI,CAAChB,QAAL,CAAcmC,MAAd,CAAqB,CAACC,GAAD,EAAMxB,OAAN,KAAkB;AACtC,aAAOwB,GAAG,IAAIxB,OAAO,CAACC,OAAtB;AACD,KAFA,EAEE,KAFF,CADH,EAIE;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GATD;;AAWA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,EAAE,EAAE,CAAtC;AAAyC,IAAA,EAAE,EAAE,CAA7C;AAAgD,IAAA,EAAE,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCwB,KAArC,WADF,EAEE;AAAM,IAAA,SAAS,EAAC,oDAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,EAKE;AAAM,IAAA,SAAS,EAAC,yBAAhB;AAA0C,IAAA,QAAQ,EAAEd,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IAAI,CAAChB,QAAL,CAAcW,GAAd,CAAkBC,OAAO,IAAI;AAC5B,WACE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,GAAG,EAAG,WAAUA,OAAO,CAACG,GAAI,EAF9B;AAGE,MAAA,SAAS,EAAG,WAAUH,OAAO,CAACG,GAAI,EAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACiB,IADX,CALF,EAQE,oBAAC,IAAD,CAAM,KAAN;AACE,MAAA,SAAS,EAAC,KADZ;AAEE,MAAA,IAAI,EAAEjB,OAAO,CAACG,GAFhB;AAGE,MAAA,IAAI,EAAC,UAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AAAkB,MAAA,SAAS,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,KAAK,EAAEH,OAAO,CAAC0B,KADjB;AAEE,MAAA,OAAO,EAAE1B,OAAO,CAACG,GAFnB;AAGE,MAAA,IAAI,EAAEH,OAAO,CAACiB,IAHhB;AAIE,MAAA,OAAO,EAAEjB,OAAO,CAACC,OAJnB;AAKE,MAAA,KAAK,EAAED,OAAO,CAAC2B,KALjB;AAME,MAAA,aAAa,EAAER,iBANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,EAeE,oBAAC,IAAD,CAAM,KAAN,CAAY,KAAZ;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,IAAI,EAAEnB,OAAO,CAACG,GAFhB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,QAAQ,EAAEY,kBAJZ;AAKE,MAAA,OAAO,EAAEf,OAAO,CAACC,OALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CARF,CADF;AAkCD,GAnCA,CADH,CADF,EAuCE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,CAACqB,WAAW,EAHxB;AAIE,IAAA,SAAS,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,EA+CE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAER,eADX;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,SAAS,EAAC,6BAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CA/CF,CALF,CADF,EA+DGnB,UAAU,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAiB,IA/D9B,CADF,CAFF,EAqEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,EAAE,EAAE,CAAtC;AAAyC,IAAA,EAAE,EAAE,CAA7C;AAAgD,IAAA,EAAE,EAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArEF,CADF,CADF;AA2ED;;AAED,eAAeF,mBAAf","sourcesContent":["import { Button, Card, Col, Container, Form, Row } from \"react-bootstrap\";\nimport React, { useState } from \"react\";\n\nimport ServiceImage from \"./ServiceImage\";\nimport Spinner from \"SharedComponents/Spinner\";\nimport services from \"constants/services\";\nimport styled from \"styled-components\";\n\nimport { useTranslation } from \"react-i18next\";\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: 50% 50%;\n  grid-column-gap: 10px;\n  grid-row-gap: 2px;\n`;\n\nfunction SignUpClientDetails({\n  defaultValues = [],\n  isFetching,\n  onBackClick,\n  onSubmit\n}) {\n  const DEFAULT_FORM = {\n    services: services.map(service => ({\n      ...service,\n      checked: defaultValues.includes(service.key)\n    }))\n  };\n\n  const [form, setForm] = useState(DEFAULT_FORM);\n  const { t } = useTranslation();\n\n  const getSubmitPayload = () => {\n    return {\n      preferredServices: form.services\n        .map(service => {\n          if (service.checked) {\n            return service.key;\n          }\n          return null;\n        })\n        .filter(x => x)\n    };\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(getSubmitPayload());\n  };\n\n  const handleBackClick = () => {\n    onBackClick(getSubmitPayload());\n  };\n\n  const handleToggleChange = e => {\n    const { name, checked } = e.target;\n    setForm({\n      ...form,\n      services: form.services.map((service, i) => {\n        if (service.key === name) {\n          return { ...service, checked };\n        }\n        return service;\n      })\n    });\n  };\n\n  const handleButtonClick = e => {\n    const { name } = e.target;\n    setForm({\n      ...form,\n      services: form.services.map((service, i) => {\n        if (service.key === name) {\n          return {\n            ...service,\n            checked: !form.services.find(s => s.key === name).checked\n          };\n        }\n        return service;\n      })\n    });\n  };\n\n  const isFormValid = () => {\n    if (\n      !form.services.reduce((acc, service) => {\n        return acc || service.checked;\n      }, false)\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"d-none d-md-flex\" md={1} lg={2} xl={3} />\n        <Col>\n          <Card className=\"login-card\">\n            <Card.Body>\n              <Card.Title className=\"text-center\">{Hello} Hugo,</Card.Title>\n              <span className=\"d-block mt-5 lead text-center text-muted pl-5 pr-5\">\n                Who do you want to connect to?\n              </span>\n              <form className=\"p-2 p-t-3 p-md-3 p-xl-5\" onSubmit={handleSubmit}>\n                <Grid>\n                  {form.services.map(service => {\n                    return (\n                      <Form.Group\n                        className=\"mb-0\"\n                        key={`service-${service.key}`}\n                        controlId={`service-${service.key}`}\n                      >\n                        <Form.Label className=\"sr-only\">\n                          {service.name}\n                        </Form.Label>\n                        <Form.Check\n                          className=\"p-0\"\n                          name={service.key}\n                          type=\"checkbox\"\n                        >\n                          <Form.Check.Label className=\"w-100\">\n                            <ServiceImage\n                              image={service.image}\n                              keyName={service.key}\n                              name={service.name}\n                              checked={service.checked}\n                              count={service.count}\n                              onButtonClick={handleButtonClick}\n                            />\n                          </Form.Check.Label>\n                          <Form.Check.Input\n                            className=\"invisible\"\n                            name={service.key}\n                            type=\"checkbox\"\n                            onChange={handleToggleChange}\n                            checked={service.checked}\n                          />\n                        </Form.Check>\n                      </Form.Group>\n                    );\n                  })}\n                </Grid>\n                <Button\n                  block\n                  type=\"submit\"\n                  disabled={!isFormValid()}\n                  className=\"mt-5\"\n                >\n                  Next\n                </Button>\n                <Button\n                  onClick={handleBackClick}\n                  block\n                  variant=\"link\"\n                  className=\"text-muted mt-0 back-button\"\n                >\n                  <small>Back.</small>\n                </Button>\n              </form>\n            </Card.Body>\n            {isFetching ? <Spinner /> : null}\n          </Card>\n        </Col>\n        <Col className=\"d-none d-md-flex\" md={1} lg={2} xl={3} />\n      </Row>\n    </Container>\n  );\n}\n\nexport default SignUpClientDetails;\n"]},"metadata":{},"sourceType":"module"}