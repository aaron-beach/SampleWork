{"ast":null,"code":"var _jsxFileName = \"/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Projects/Chat/MessageGroup.jsx\";\nimport Avatar from \"SharedComponents/Avatar\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\nconst MESSAGE_DATE_FORMAT = \"MMM d, K:mmaaaaa'm'\";\nconst Wrapper = styled.div``;\nconst Group = styled.div`\n  display: grid;\n  grid-template-columns: 28px 1fr;\n  grid-column-gap: 0.5rem;\n  margin-bottom: 2rem;\n`;\nconst Message = styled.span`\n  color: #a6a6ac;\n  display: block;\n  font-size: 0.8125rem;\n  line-height: 1.25rem;\n  margin-bottom: 1rem;\n`;\nconst MessageAuthor = styled.span`\n  color: ${({\n  isAuthedUser\n}) => isAuthedUser ? \"#8182DF\" : \"#75BEDB\"};\n  display: inline-block;\n  font-size: 0.8125rem;\n\n  &:after {\n    color: #a6a6ac;\n    padding-left: 1rem;\n    display: inline-block;\n    content: \"–\";\n  }\n`;\nconst MessageTimestamp = styled.span`\n  color: #a6a6ac;\n  display: inline-block;\n  font-size: 0.8125rem;\n  padding-left: 1rem;\n`; // Future: Use `isAuthedUser` to determine whether to show delete message controls\n\nfunction MessageGroup({\n  isAuthedUser,\n  messages = []\n}) {\n  const renderMessages = () => {\n    if (!messages || !messages.length) {\n      // FIXME Zero state here\n      return null;\n    }\n\n    const author = messages[0].author;\n    const timestamp = messages[0].sentAt;\n    return React.createElement(Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      name: author.name,\n      image: author.avatar,\n      size: 28,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(MessageAuthor, {\n      isAuthedUser: isAuthedUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, author.name), React.createElement(MessageTimestamp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, format(timestamp, MESSAGE_DATE_FORMAT))), messages.map(m => {\n      const id = m.id,\n            text = m.text;\n      return React.createElement(Message, {\n        key: `message-${id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, text);\n    })));\n  };\n\n  return React.createElement(Wrapper, {\n    className: \"mt-3 mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, renderMessages());\n}\n\nexport default MessageGroup;","map":{"version":3,"sources":["/Users/aaronbeach/Desktop/workspace/riseworks/spa/src/Projects/Chat/MessageGroup.jsx"],"names":["Avatar","React","format","styled","MESSAGE_DATE_FORMAT","Wrapper","div","Group","Message","span","MessageAuthor","isAuthedUser","MessageTimestamp","MessageGroup","messages","renderMessages","length","author","timestamp","sentAt","name","avatar","map","m","id","text"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,MAAMC,OAAO,GAAGF,MAAM,CAACG,GAAI,EAA3B;AACA,MAAMC,KAAK,GAAGJ,MAAM,CAACG,GAAI;;;;;CAAzB;AAMA,MAAME,OAAO,GAAGL,MAAM,CAACM,IAAK;;;;;;CAA5B;AAOA,MAAMC,aAAa,GAAGP,MAAM,CAACM,IAAK;WACvB,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAuBA,YAAY,GAAG,SAAH,GAAe,SAAW;;;;;;;;;;CADxE;AAYA,MAAMC,gBAAgB,GAAGT,MAAM,CAACM,IAAK;;;;;CAArC,C,CAOA;;AACA,SAASI,YAAT,CAAsB;AAAEF,EAAAA,YAAF;AAAgBG,EAAAA,QAAQ,GAAG;AAA3B,CAAtB,EAAuD;AACrD,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAI,CAACD,QAAD,IAAa,CAACA,QAAQ,CAACE,MAA3B,EAAmC;AACjC;AACA,aAAO,IAAP;AACD;;AACD,UAAMC,MAAM,GAAGH,QAAQ,CAAC,CAAD,CAAR,CAAYG,MAA3B;AACA,UAAMC,SAAS,GAAGJ,QAAQ,CAAC,CAAD,CAAR,CAAYK,MAA9B;AACA,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF,MAAM,CAACG,IAArB;AAA2B,MAAA,KAAK,EAAEH,MAAM,CAACI,MAAzC;AAAiD,MAAA,IAAI,EAAE,EAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAe,MAAA,YAAY,EAAEV,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,MAAM,CAACG,IADV,CADF,EAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,MAAM,CAACgB,SAAD,EAAYd,mBAAZ,CADT,CAJF,CADF,EASGU,QAAQ,CAACQ,GAAT,CAAaC,CAAC,IAAI;AAAA,YACTC,EADS,GACID,CADJ,CACTC,EADS;AAAA,YACLC,IADK,GACIF,CADJ,CACLE,IADK;AAEjB,aAAO,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAG,WAAUD,EAAG,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCC,IAAhC,CAAP;AACD,KAHA,CATH,CAFF,CADF;AAmBD,GA1BD;;AA4BA,SAAO,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCV,cAAc,EAA9C,CAAP;AACD;;AAED,eAAeF,YAAf","sourcesContent":["import Avatar from \"SharedComponents/Avatar\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport styled from \"styled-components\";\n\nconst MESSAGE_DATE_FORMAT = \"MMM d, K:mmaaaaa'm'\";\n\nconst Wrapper = styled.div``;\nconst Group = styled.div`\n  display: grid;\n  grid-template-columns: 28px 1fr;\n  grid-column-gap: 0.5rem;\n  margin-bottom: 2rem;\n`;\nconst Message = styled.span`\n  color: #a6a6ac;\n  display: block;\n  font-size: 0.8125rem;\n  line-height: 1.25rem;\n  margin-bottom: 1rem;\n`;\nconst MessageAuthor = styled.span`\n  color: ${({ isAuthedUser }) => (isAuthedUser ? \"#8182DF\" : \"#75BEDB\")};\n  display: inline-block;\n  font-size: 0.8125rem;\n\n  &:after {\n    color: #a6a6ac;\n    padding-left: 1rem;\n    display: inline-block;\n    content: \"–\";\n  }\n`;\nconst MessageTimestamp = styled.span`\n  color: #a6a6ac;\n  display: inline-block;\n  font-size: 0.8125rem;\n  padding-left: 1rem;\n`;\n\n// Future: Use `isAuthedUser` to determine whether to show delete message controls\nfunction MessageGroup({ isAuthedUser, messages = [] }) {\n  const renderMessages = () => {\n    if (!messages || !messages.length) {\n      // FIXME Zero state here\n      return null;\n    }\n    const author = messages[0].author;\n    const timestamp = messages[0].sentAt;\n    return (\n      <Group>\n        <Avatar name={author.name} image={author.avatar} size={28} />\n        <div>\n          <div className=\"mb-3\">\n            <MessageAuthor isAuthedUser={isAuthedUser}>\n              {author.name}\n            </MessageAuthor>\n            <MessageTimestamp>\n              {format(timestamp, MESSAGE_DATE_FORMAT)}\n            </MessageTimestamp>\n          </div>\n          {messages.map(m => {\n            const { id, text } = m;\n            return <Message key={`message-${id}`}>{text}</Message>;\n          })}\n        </div>\n      </Group>\n    );\n  };\n\n  return <Wrapper className=\"mt-3 mb-3\">{renderMessages()}</Wrapper>;\n}\n\nexport default MessageGroup;\n"]},"metadata":{},"sourceType":"module"}